-- MySQL Script generated by MySQL Workbench
-- Thu Dec 12 11:48:11 2024
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema VGORD
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema VGORD
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `VGORD` DEFAULT CHARACTER SET utf8 ;
USE `VGORD` ;

-- -----------------------------------------------------
-- Table `VGORD`.`Platform`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `VGORD`.`Platform` (
  `IGDB_id` INT NOT NULL,
  `name` VARCHAR(50) NOT NULL,
  PRIMARY KEY (`IGDB_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `VGORD`.`Genre`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `VGORD`.`Genre` (
  `IGDB_id` INT NOT NULL,
  `name` VARCHAR(50) NOT NULL,
  PRIMARY KEY (`IGDB_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `VGORD`.`Franchice`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `VGORD`.`Franchice` (
  `IGDB_id` INT NOT NULL,
  `name` VARCHAR(50) NOT NULL,
  PRIMARY KEY (`IGDB_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `VGORD`.`Collection`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `VGORD`.`Collection` (
  `IGDB_id` INT NOT NULL,
  `name` VARCHAR(50) NOT NULL,
  PRIMARY KEY (`IGDB_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `VGORD`.`Theme`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `VGORD`.`Theme` (
  `IGDB_id` INT NOT NULL,
  `name` VARCHAR(50) NOT NULL,
  PRIMARY KEY (`IGDB_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `VGORD`.`AgeRating`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `VGORD`.`AgeRating` (
  `IGDB_id` INT NOT NULL,
  `name` VARCHAR(50) NOT NULL,
  PRIMARY KEY (`IGDB_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `VGORD`.`Perspective`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `VGORD`.`Perspective` (
  `IGDB_id` INT NOT NULL,
  `name` VARCHAR(50) NOT NULL,
  PRIMARY KEY (`IGDB_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `VGORD`.`Engine`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `VGORD`.`Engine` (
  `IGDB_id` INT NOT NULL,
  `name` VARCHAR(50) NOT NULL,
  PRIMARY KEY (`IGDB_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `VGORD`.`GameType`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `VGORD`.`GameType` (
  `IGDB_id` INT NOT NULL,
  `name` VARCHAR(50) NOT NULL,
  PRIMARY KEY (`IGDB_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `VGORD`.`Developer`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `VGORD`.`Developer` (
  `IGDB_id` INT NOT NULL,
  `name` VARCHAR(50) NOT NULL,
  PRIMARY KEY (`IGDB_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `VGORD`.`Publisher`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `VGORD`.`Publisher` (
  `IGDB_id` INT NOT NULL,
  `name` VARCHAR(50) NOT NULL,
  PRIMARY KEY (`IGDB_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `VGORD`.`Game`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `VGORD`.`Game` (
  `IGDB_id` INT NOT NULL,
  `title` VARCHAR(50) NOT NULL,
  `cover` VARCHAR(50) NOT NULL,
  `isSpinOff` INT NULL,
  `IGDB_url` VARCHAR(50) NULL,
  `Engine_IGDB_id` INT NULL,
  `GameType_IGDB_id` INT NOT NULL,
  PRIMARY KEY (`IGDB_id`),
  INDEX `fk_Game_Engine1_idx` (`Engine_IGDB_id` ASC),
  INDEX `fk_Game_GameType1_idx` (`GameType_IGDB_id` ASC),
  CONSTRAINT `fk_Game_Engine1`
    FOREIGN KEY (`Engine_IGDB_id`)
    REFERENCES `VGORD`.`Engine` (`IGDB_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Game_GameType1`
    FOREIGN KEY (`GameType_IGDB_id`)
    REFERENCES `VGORD`.`GameType` (`IGDB_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `VGORD`.`PlatformGame`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `VGORD`.`PlatformGame` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `Platform_IGDB_id` INT NOT NULL,
  `Game_IGDB_id` INT NOT NULL,
  `releasedDate` DATE NOT NULL,
  `zone` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_Platform_has_Game_Game1_idx` (`Game_IGDB_id` ASC),
  INDEX `fk_Platform_has_Game_Platform1_idx` (`Platform_IGDB_id` ASC),
  CONSTRAINT `fk_Platform_has_Game_Platform1`
    FOREIGN KEY (`Platform_IGDB_id`)
    REFERENCES `VGORD`.`Platform` (`IGDB_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Platform_has_Game_Game1`
    FOREIGN KEY (`Game_IGDB_id`)
    REFERENCES `VGORD`.`Game` (`IGDB_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `VGORD`.`GenreGame`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `VGORD`.`GenreGame` (
  `Game_IGDB_id` INT NOT NULL,
  `Genre_IGDB_id` INT NOT NULL,
  PRIMARY KEY (`Game_IGDB_id`, `Genre_IGDB_id`),
  INDEX `fk_Game_has_Genre_Genre1_idx` (`Genre_IGDB_id` ASC),
  INDEX `fk_Game_has_Genre_Game1_idx` (`Game_IGDB_id` ASC),
  CONSTRAINT `fk_Game_has_Genre_Game1`
    FOREIGN KEY (`Game_IGDB_id`)
    REFERENCES `VGORD`.`Game` (`IGDB_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Game_has_Genre_Genre1`
    FOREIGN KEY (`Genre_IGDB_id`)
    REFERENCES `VGORD`.`Genre` (`IGDB_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `VGORD`.`FranchiceGame`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `VGORD`.`FranchiceGame` (
  `Game_IGDB_id` INT NOT NULL,
  `Franchice_IGDB_id` INT NOT NULL,
  PRIMARY KEY (`Game_IGDB_id`, `Franchice_IGDB_id`),
  INDEX `fk_Game_has_Franchice_Franchice1_idx` (`Franchice_IGDB_id` ASC),
  INDEX `fk_Game_has_Franchice_Game1_idx` (`Game_IGDB_id` ASC),
  CONSTRAINT `fk_Game_has_Franchice_Game1`
    FOREIGN KEY (`Game_IGDB_id`)
    REFERENCES `VGORD`.`Game` (`IGDB_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Game_has_Franchice_Franchice1`
    FOREIGN KEY (`Franchice_IGDB_id`)
    REFERENCES `VGORD`.`Franchice` (`IGDB_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `VGORD`.`CollectionGame`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `VGORD`.`CollectionGame` (
  `Game_IGDB_id` INT NOT NULL,
  `Collection_IGDB_id` INT NOT NULL,
  PRIMARY KEY (`Game_IGDB_id`, `Collection_IGDB_id`),
  INDEX `fk_Game_has_Collection_Collection1_idx` (`Collection_IGDB_id` ASC),
  INDEX `fk_Game_has_Collection_Game1_idx` (`Game_IGDB_id` ASC),
  CONSTRAINT `fk_Game_has_Collection_Game1`
    FOREIGN KEY (`Game_IGDB_id`)
    REFERENCES `VGORD`.`Game` (`IGDB_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Game_has_Collection_Collection1`
    FOREIGN KEY (`Collection_IGDB_id`)
    REFERENCES `VGORD`.`Collection` (`IGDB_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `VGORD`.`ThemeGame`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `VGORD`.`ThemeGame` (
  `Game_IGDB_id` INT NOT NULL,
  `Theme_IGDB_id` INT NOT NULL,
  PRIMARY KEY (`Game_IGDB_id`, `Theme_IGDB_id`),
  INDEX `fk_Game_has_Theme_Theme1_idx` (`Theme_IGDB_id` ASC),
  INDEX `fk_Game_has_Theme_Game1_idx` (`Game_IGDB_id` ASC),
  CONSTRAINT `fk_Game_has_Theme_Game1`
    FOREIGN KEY (`Game_IGDB_id`)
    REFERENCES `VGORD`.`Game` (`IGDB_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Game_has_Theme_Theme1`
    FOREIGN KEY (`Theme_IGDB_id`)
    REFERENCES `VGORD`.`Theme` (`IGDB_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `VGORD`.`AgeRatingGame`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `VGORD`.`AgeRatingGame` (
  `Game_IGDB_id` INT NOT NULL,
  `AgeRating_IGDB_id` INT NOT NULL,
  PRIMARY KEY (`Game_IGDB_id`, `AgeRating_IGDB_id`),
  INDEX `fk_Game_has_AgeRating_AgeRating1_idx` (`AgeRating_IGDB_id` ASC),
  INDEX `fk_Game_has_AgeRating_Game1_idx` (`Game_IGDB_id` ASC),
  CONSTRAINT `fk_Game_has_AgeRating_Game1`
    FOREIGN KEY (`Game_IGDB_id`)
    REFERENCES `VGORD`.`Game` (`IGDB_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Game_has_AgeRating_AgeRating1`
    FOREIGN KEY (`AgeRating_IGDB_id`)
    REFERENCES `VGORD`.`AgeRating` (`IGDB_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `VGORD`.`PerspectiveGame`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `VGORD`.`PerspectiveGame` (
  `Game_IGDB_id` INT NOT NULL,
  `Perspective_IGDB_id` INT NOT NULL,
  PRIMARY KEY (`Game_IGDB_id`, `Perspective_IGDB_id`),
  INDEX `fk_Game_has_Perspective_Perspective1_idx` (`Perspective_IGDB_id` ASC),
  INDEX `fk_Game_has_Perspective_Game1_idx` (`Game_IGDB_id` ASC),
  CONSTRAINT `fk_Game_has_Perspective_Game1`
    FOREIGN KEY (`Game_IGDB_id`)
    REFERENCES `VGORD`.`Game` (`IGDB_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Game_has_Perspective_Perspective1`
    FOREIGN KEY (`Perspective_IGDB_id`)
    REFERENCES `VGORD`.`Perspective` (`IGDB_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `VGORD`.`DeveloperGame`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `VGORD`.`DeveloperGame` (
  `Game_IGDB_id` INT NOT NULL,
  `Developer_IGDB_id` INT NOT NULL,
  PRIMARY KEY (`Game_IGDB_id`, `Developer_IGDB_id`),
  INDEX `fk_Game_has_Developer_Developer1_idx` (`Developer_IGDB_id` ASC),
  INDEX `fk_Game_has_Developer_Game1_idx` (`Game_IGDB_id` ASC),
  CONSTRAINT `fk_Game_has_Developer_Game1`
    FOREIGN KEY (`Game_IGDB_id`)
    REFERENCES `VGORD`.`Game` (`IGDB_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Game_has_Developer_Developer1`
    FOREIGN KEY (`Developer_IGDB_id`)
    REFERENCES `VGORD`.`Developer` (`IGDB_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `VGORD`.`PublisherGame`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `VGORD`.`PublisherGame` (
  `Game_IGDB_id` INT NOT NULL,
  `Publisher_IGDB_id` INT NOT NULL,
  PRIMARY KEY (`Game_IGDB_id`, `Publisher_IGDB_id`),
  INDEX `fk_Game_has_Publisher_Publisher1_idx` (`Publisher_IGDB_id` ASC),
  INDEX `fk_Game_has_Publisher_Game1_idx` (`Game_IGDB_id` ASC),
  CONSTRAINT `fk_Game_has_Publisher_Game1`
    FOREIGN KEY (`Game_IGDB_id`)
    REFERENCES `VGORD`.`Game` (`IGDB_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Game_has_Publisher_Publisher1`
    FOREIGN KEY (`Publisher_IGDB_id`)
    REFERENCES `VGORD`.`Publisher` (`IGDB_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `VGORD`.`RelatedGame`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `VGORD`.`RelatedGame` (
  `GamePrincipal_IGDB_id` INT NOT NULL,
  `GameRelated_IGDB_id` INT NOT NULL,
  PRIMARY KEY (`GamePrincipal_IGDB_id`, `GameRelated_IGDB_id`),
  INDEX `fk_Game_has_Game_Game2_idx` (`GameRelated_IGDB_id` ASC),
  INDEX `fk_Game_has_Game_Game1_idx` (`GamePrincipal_IGDB_id` ASC),
  CONSTRAINT `fk_Game_has_Game_Game1`
    FOREIGN KEY (`GamePrincipal_IGDB_id`)
    REFERENCES `VGORD`.`Game` (`IGDB_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Game_has_Game_Game2`
    FOREIGN KEY (`GameRelated_IGDB_id`)
    REFERENCES `VGORD`.`Game` (`IGDB_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `VGORD`.`Store`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `VGORD`.`Store` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(50) NOT NULL,
  `logo` VARCHAR(50) NOT NULL,
  `idSuscription` INT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `VGORD`.`StorePlatform`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `VGORD`.`StorePlatform` (
  `Platform_IGDB_id` INT NOT NULL,
  `Store_id` INT NOT NULL,
  PRIMARY KEY (`Platform_IGDB_id`, `Store_id`),
  INDEX `fk_Platform_has_Store_Store1_idx` (`Store_id` ASC),
  INDEX `fk_Platform_has_Store_Platform1_idx` (`Platform_IGDB_id` ASC),
  CONSTRAINT `fk_Platform_has_Store_Platform1`
    FOREIGN KEY (`Platform_IGDB_id`)
    REFERENCES `VGORD`.`Platform` (`IGDB_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Platform_has_Store_Store1`
    FOREIGN KEY (`Store_id`)
    REFERENCES `VGORD`.`Store` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `VGORD`.`Timesbeat`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `VGORD`.`Timesbeat` (
  `IGDB_id` INT NOT NULL,
  `type` VARCHAR(45) NOT NULL,
  `time` VARCHAR(45) NOT NULL,
  `Game_IGDB_id` INT NOT NULL,
  PRIMARY KEY (`IGDB_id`),
  INDEX `fk_Timesbeat_Game1_idx` (`Game_IGDB_id` ASC),
  CONSTRAINT `fk_Timesbeat_Game1`
    FOREIGN KEY (`Game_IGDB_id`)
    REFERENCES `VGORD`.`Game` (`IGDB_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `VGORD`.`Link`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `VGORD`.`Link` (
  `IGDB_id` INT NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `icon` VARCHAR(45) NOT NULL,
  `url` VARCHAR(45) NOT NULL,
  `Game_IGDB_id` INT NOT NULL,
  PRIMARY KEY (`IGDB_id`),
  INDEX `fk_Link_Game1_idx` (`Game_IGDB_id` ASC),
  CONSTRAINT `fk_Link_Game1`
    FOREIGN KEY (`Game_IGDB_id`)
    REFERENCES `VGORD`.`Game` (`IGDB_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `VGORD`.`Media`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `VGORD`.`Media` (
  `IGDB_id` INT NOT NULL,
  `type` VARCHAR(45) NOT NULL,
  `url` VARCHAR(45) NOT NULL,
  `Game_IGDB_id` INT NOT NULL,
  PRIMARY KEY (`IGDB_id`),
  INDEX `fk_Media_Game1_idx` (`Game_IGDB_id` ASC),
  CONSTRAINT `fk_Media_Game1`
    FOREIGN KEY (`Game_IGDB_id`)
    REFERENCES `VGORD`.`Game` (`IGDB_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `VGORD`.`User`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `VGORD`.`User` (
  `id` VARCHAR(45) NOT NULL,
  `username` VARCHAR(16) NOT NULL,
  `password` VARCHAR(32) NOT NULL,
  `email` VARCHAR(255) NULL,
  `create_time` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `darkmode` INT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `VGORD`.`UserPlatform`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `VGORD`.`UserPlatform` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `Platform_IGDB_id` INT NOT NULL,
  `User_id` VARCHAR(45) NOT NULL,
  `emulator` INT NULL,
  `retrocompatible` INT NULL,
  `FisicPlatform_IGDB_id` INT NULL,
  INDEX `fk_Platform_has_User_User1_idx` (`User_id` ASC),
  INDEX `fk_Platform_has_User_Platform1_idx` (`Platform_IGDB_id` ASC),
  INDEX `fk_UserPlatform_Platform1_idx` (`FisicPlatform_IGDB_id` ASC),
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_Platform_has_User_Platform1`
    FOREIGN KEY (`Platform_IGDB_id`)
    REFERENCES `VGORD`.`Platform` (`IGDB_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Platform_has_User_User1`
    FOREIGN KEY (`User_id`)
    REFERENCES `VGORD`.`User` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_UserPlatform_Platform1`
    FOREIGN KEY (`FisicPlatform_IGDB_id`)
    REFERENCES `VGORD`.`Platform` (`IGDB_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `VGORD`.`UserGame`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `VGORD`.`UserGame` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `cost` FLOAT NOT NULL,
  `adquireDate` DATE NULL,
  `allAchivements` INT NULL,
  `PlatformGame_id` INT NOT NULL,
  `UserPlatform_id` INT NOT NULL,
  `Store_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_UserGame_PlatformGame1_idx` (`PlatformGame_id` ASC),
  INDEX `fk_UserGame_UserPlatform1_idx` (`UserPlatform_id` ASC),
  INDEX `fk_UserGame_Store1_idx` (`Store_id` ASC),
  CONSTRAINT `fk_UserGame_PlatformGame1`
    FOREIGN KEY (`PlatformGame_id`)
    REFERENCES `VGORD`.`PlatformGame` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_UserGame_UserPlatform1`
    FOREIGN KEY (`UserPlatform_id`)
    REFERENCES `VGORD`.`UserPlatform` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_UserGame_Store1`
    FOREIGN KEY (`Store_id`)
    REFERENCES `VGORD`.`Store` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `VGORD`.`Status`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `VGORD`.`Status` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `icon` VARCHAR(45) NOT NULL,
  `textColor` VARCHAR(45) NULL,
  `bgColor` VARCHAR(45) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `VGORD`.`Playing`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `VGORD`.`Playing` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `DateStart` DATETIME NOT NULL,
  `DateEnd` DATETIME NULL,
  `UserGame_id` INT NOT NULL,
  `Status_id` INT NOT NULL,
  `Death` INT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_Playing_UserGame1_idx` (`UserGame_id` ASC),
  INDEX `fk_Playing_Status1_idx` (`Status_id` ASC),
  CONSTRAINT `fk_Playing_UserGame1`
    FOREIGN KEY (`UserGame_id`)
    REFERENCES `VGORD`.`UserGame` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Playing_Status1`
    FOREIGN KEY (`Status_id`)
    REFERENCES `VGORD`.`Status` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `VGORD`.`TimePlayed`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `VGORD`.`TimePlayed` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `DateStart` DATETIME NOT NULL,
  `DateEnd` DATETIME NULL,
  `Playing_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_TimePlayed_Playing1_idx` (`Playing_id` ASC),
  CONSTRAINT `fk_TimePlayed_Playing1`
    FOREIGN KEY (`Playing_id`)
    REFERENCES `VGORD`.`Playing` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
